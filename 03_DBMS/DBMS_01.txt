-- 1. 데이터베이스 목록 보기
SHOW DATABASES;

-- 2. 테이블 목록 보기
SHOW TABLES;

-- 3. 데이터베이스 만들기
CREATE DATABASE 데이터베이스_이름;

-- 4. 데이터베이스 삭제
DROP DATABASE 데이터베이스_이름;

-- 5. 데이터베이스로 진입하기
USE 데이터베이스_이름;

-- 6. 테이블 만들기
CREATE TABLE 테이블_이름 (
    열1 종류,
    열2 종류,
    ...
);

-- 예시: 'employee' 테이블 만들기
CREATE TABLE employee (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    age INT,
    position VARCHAR(100)
);

-- 7. 테이블 정보 확인하기
DESC 테이블_이름;

-- 8. 테이블에 정보 추가 (행 추가)
INSERT INTO 테이블_이름 (열1, 열2, ...) VALUES (값1, 값2, ...), (값1, 값2, ...), ...;

-- 예시: 'employee' 테이블에 데이터 추가
INSERT INTO employee (name, age, position) 
VALUES ('홍길동', 33, 'Sales-man'),
       ('기안84', 38, '디자이너'),
       ('양코딩', 28, '개발자');

-- 9. 전체 테이블 출력
SELECT * FROM 테이블_이름;

-- 10. 정렬하여 출력 (내림차순 DESC / 오름차순 ASC)
SELECT * FROM 테이블_이름 ORDER BY 열_이름 DESC;  -- 내림차순
SELECT * FROM 테이블_이름 ORDER BY 열_이름 ASC;   -- 오름차순

-- 11. 조건에 맞는 행만 출력
SELECT * FROM 테이블_이름 WHERE 조건;

-- 예시: age가 30 이상인 데이터만 출력
SELECT * FROM employee WHERE age >= 30;

-- 12. 테이블에 열 추가 (새로운 컬럼 추가)
ALTER TABLE 테이블_이름 ADD COLUMN 열_이름 INT;

-- 예시: 'employee' 테이블에 'salary' 열 추가
ALTER TABLE employee ADD COLUMN salary INT;

-- 13. 기존 열 옆에 열 추가
ALTER TABLE 테이블_이름 ADD COLUMN 열_이름 INT AFTER 기존_열_이름;

-- 예시: 'employee' 테이블에 'salary' 열을 'age' 뒤에 추가
ALTER TABLE employee ADD COLUMN salary INT AFTER age;

-- 14. 열 삭제
ALTER TABLE 테이블_이름 DROP COLUMN 열_이름;

-- 예시: 'employee' 테이블에서 'salary' 열 삭제
ALTER TABLE employee DROP COLUMN salary;

-- 15. 열 이름이나 속성 변경 (위치 변경도 가능)
ALTER TABLE 테이블_이름 MODIFY COLUMN 열_이름 열_속성 AFTER 기존_열_이름;

-- 예시: 'employee' 테이블에서 'gender' 컬럼을 'ENUM' 타입으로 변경
ALTER TABLE employee MODIFY COLUMN gender ENUM('M', 'F') AFTER age;

-- 16. 데이터 업데이트
UPDATE 테이블_이름 SET 열_이름 = 변경할_값 WHERE 조건;

-- 예시: 'employee' 테이블에서 '홍길동'의 'position'을 '영업사원'으로 변경
UPDATE employee SET position = '영업사원' WHERE name = '홍길동';

-- 17. 조건에 맞는 값 변경 (CASE WHEN)
UPDATE 테이블_이름 SET 열_이름 = CASE WHEN 조건 THEN 변경_값 WHEN 조건 THEN 변경_값 END;

-- 예시: 'employee' 테이블에서 나이에 따라 'circle' 컬럼 값을 변경
UPDATE employee SET circle = CASE 
    WHEN age <= 32 THEN 'Movie'
    WHEN age = 33 THEN 'Hiking'
    WHEN age >= 34 THEN 'Fishing' 
END;

-- 18. BETWEEN을 사용하여 범위에 맞는 값 출력
SELECT * FROM 테이블_이름 WHERE 열_이름 BETWEEN 값1 AND 값2;

-- 예시: 'age'가 20 이상 30 이하인 데이터를 출력
SELECT * FROM employee WHERE age BETWEEN 20 AND 30;
