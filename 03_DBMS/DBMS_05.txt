✅ 서브쿼리 실전 문제 10선
1️. 포지션별로 가장 높은 급여를 받는 직원의 이름, 포지션명, 급여를 출력하시오.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id WHERE (p.position_id, e.salary) IN (SELECT position_id, MAX(salary) FROM employee GROUP BY position_id);

2️. 각 포지션별 평균 급여보다 높은 급여를 받는 직원의 이름, 포지션명, 급여를 출력하시오.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id WHERE e.salary >= (SELECT AVG(e2.salary) FROM employee e2 WHERE e2.position_id = e.position_id);

3️. 가장 늦게 입사한 직원의 이름과 입사일(start_date)을 출력하시오.
SELECT name, start_date FROM employee WHERE start_date = (SELECT MAX(start_date) FROM employee);

4️. 직원 수가 가장 많은 포지션의 이름과 해당 직원 수를 출력하시오.
SELECT p.position_name, COUNT(e.id) FROM employee e JOIN position p ON e.position_id = p.position_id GROUP BY p.position_name HAVING COUNT(e.id) = (SELECT MAX(cnt) AS `최다 직원 수` FROM (SELECT COUNT(id) AS cnt FROM employee GROUP BY position) AS cnt_position);

5️. 직위별 최소 급여를 받는 직원의 이름, 포지션명, 급여를 출력하시오.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id WHERE (p.position_id, e.salary) IN (SELECT position_id, MIN(salary) FROM employee GROUP BY position_id);

6️. 급여 상위 3명에 해당하는 직원의 이름, 급여, 포지션명을 출력하시오.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id ORDER BY e.salary DESC LIMIT 3;

7️. 포지션 테이블에는 있지만 현재 직원이 없는 포지션명을 출력하시오.
SELECT p.position_name FROM position p LEFT JOIN employee e ON p.position_id = e.position_id WHERE e.id IS NULL;

8️. 포지션별 평균 급여를 출력하되, 평균이 3000 이상인 포지션만 출력하시오.
SELECT p.position_name FROM position p JOIN employee e ON p.position_id = e.position_id GROUP BY p.position_name HAVING AVG(e.salary) > 3000;

9️. 모든 직원의 평균 급여보다 높은 급여를 받는 직원의 이름, 포지션명, 급여를 출력하시오.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id WHERE salary > (SELECT AVG(salary) FROM employee);

10. 직원 중 자신보다 급여가 높은 사람이 3명 이상인 직원의 이름과 급여를 출력하시오.
 SELECT e1.name, e1.salary FROM employee e1 WHERE (SELECT COUNT(*) FROM employee e2 WHERE e2.salary > e1.salary) >= 3;



✅ 서브쿼리 실전 연습 문제 5선
1️. 부서별(포지션별) 평균 급여보다 낮은 급여를 받는 직원의 이름, 급여, 포지션명을 출력하시오.
SELECT e.name, e.salary, p.position_name FROM employee e JOIN position p ON e.position_id = p.position_id WHERE e.salary < (SELECT AVG(e2.salary) FROM employee e2 WHERE e2.position_id = e.position_id);

2️. 전체 평균 급여보다 급여가 낮으면서 이름이 '김'으로 시작하는 직원의 이름, 급여를 출력하시오.
SELECT name, salary FROM employee WHERE name LIKE '%김%' AND salary < (SELECT AVG(salary) FROM employee);

3️. 입사일이 직급별(포지션별) 최솟값인 직원의 이름, 포지션명, 입사일을 출력하시오.
(즉, 포지션별로 가장 먼저 입사한 사람)
SELECT e.name, p.position_name, e.start_date FROM employee e JOIN position p ON p.position_id = e.position_id WHERE (e.start_date, p.position_id) IN (SELECT MIN(start_date), position_id FROM employee GROUP BY position_id);

4️. 가장 급여가 낮은 직원의 이름, 포지션명, 급여를 출력하시오.
단, 가장 낮은 급여를 가진 사람이 여러 명일 수도 있음.
SELECT e.name, p.position_name, e.salary FROM employee e JOIN position p ON e.position_id = p.position_id WHERE e.salary IN (SELECT MIN(salary) FROM employee);

5️. 자신보다 나이가 많은 직원 중 급여가 더 낮은 사람의 수가 2명 이상인 직원의 이름과 급여를 출력하시오.
SELECT e1.name, e1.salary FROM employee e1 WHERE (SELECT COUNT(*) FROM employee e2 WHERE e2.salary < e1.salary AND e2.age > e1.age) >= 2;


======================================================================
필요 저장 공간 구하는 공식 : 한 줄 용량 * 데이터 건 수 * 여유공간 * 예상 성장률
